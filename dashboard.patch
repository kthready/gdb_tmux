--- .gdbinit.2	2020-05-09 23:28:59.615324473 +0800
+++ .gdbinit	2020-05-09 23:17:48.363224868 +0800
@@ -1231,9 +1231,12 @@
                     if address['file_line'] == number and address['file_name'] == sal.symtab.filename:
                         enabled = enabled or (address['enabled'] and is_root_enabled)
             if enabled is None:
-                breakpoint = ' '
+                if int(number) == current_line:
+                    breakpoint = '>'
+                else:
+                    breakpoint = ' '
             else:
-                breakpoint = ansi('!', R.style_critical) if enabled else ansi('-', R.style_low)
+                breakpoint = ansi('B', R.style_critical) if enabled else ansi('-', R.style_low)
             out.append(line_format.format(breakpoint, number, line.rstrip('\n')))
         # return the output along with scroll indicators
         if len(out) <= height:
@@ -1349,7 +1352,8 @@
                 extra_end = 0
                 # allow to scroll down nevertheless
                 clamped_offset = min(self.offset, 0)
-                asm = self.fetch_asm(frame.pc(), height - clamped_offset, True, highlighter)
+                #asm = self.fetch_asm(frame.pc(), height - clamped_offset, True, highlighter)
+                asm = self.fetch_asm(frame.pc() - int(height / 2) * 4, height - clamped_offset, True, highlighter)
                 asm = asm[-clamped_offset:]
             except gdb.error as e:
                 msg = '{}'.format(e)
@@ -1386,7 +1390,7 @@
                     offset = offset.ljust(max_offset + 1)  # sign
                     func_info = '{}{}'.format(frame.function(), offset)
                 else:
-                    func_info = '?'
+                    func_info = '??'
             else:
                 func_info = ''
             format_string = '{}{}{}{}{}{}'
@@ -1422,9 +1426,12 @@
                     if address['address'] == addr:
                         enabled = enabled or (address['enabled'] and is_root_enabled)
             if enabled is None:
-                breakpoint = ' '
+                if addr == frame.pc():
+                    breakpoint = '>'
+                else:
+                    breakpoint = ' '
             else:
-                breakpoint = ansi('!', R.style_critical) if enabled else ansi('-', R.style_low)
+                breakpoint = ansi('B', R.style_critical) if enabled else ansi('-', R.style_low)
             out.append(format_string.format(breakpoint, addr_str, indicator, opcodes, func_info, text))
         # return the output along with scroll indicators
         if len(out) <= height:
